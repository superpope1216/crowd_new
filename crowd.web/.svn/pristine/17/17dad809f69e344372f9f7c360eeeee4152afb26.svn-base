package com.wisedu.crowd.controller.kfzxx.first;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wisedu.crowd.controller.BaseController;
import com.wisedu.crowd.entity.dictionary.XzqhInfo;
import com.wisedu.crowd.service.dto.DataResult;
import com.wisedu.crowd.entity.system.DataCode;
import com.wisedu.crowd.entity.yhgl.KfzxxInfo;
import com.wisedu.crowd.entity.yhgl.extend.KfzxxInfoExtend;
import com.wisedu.crowd.service.dictionary.XzqhInfoService;
import com.wisedu.crowd.service.system.DataCodeService;
import com.wisedu.crowd.service.yhgl.KfzxxInfoService;

@Controller
@RequestMapping("kfzSupply")
public class KfzSupplyController extends BaseController {
	
	@Autowired
	private KfzxxInfoService kfzxxInfoService;
	
	@Autowired
	private DataCodeService  dataCodeService;
	
	@Autowired
	private XzqhInfoService   xzqhInfoService;
	
	@RequestMapping("index")
	public String index(Model model){
		List<DataCode> booleanList=dataCodeService.selectAllByTable("T_CROWD_SJZD_BOOLEAN");
		model.addAttribute("booleanList", booleanList);
		List<DataCode> gzxzList=dataCodeService.selectAllByTable("T_CROWD_SJZD_GZXZ");
		model.addAttribute("gzxzList", gzxzList);
		List<DataCode> gzlxList=dataCodeService.selectAllByTable("T_CROWD_SJZD_KFZGZLX");
		model.addAttribute("gzlxList", gzlxList);
		List<DataCode> scjsList=dataCodeService.selectAllByTable("T_CROWD_SJZD_KFZSCJS");
		model.addAttribute("scjsList", scjsList);
		List<DataCode> gznxList=dataCodeService.selectAllByTable("T_CROWD_SJZD_KFZGZNX");
		model.addAttribute("gznxList", gznxList);
		List<DataCode> rangeList=dataCodeService.selectAllByTable("T_CROWD_SJZD_USER_RANGE");
		model.addAttribute("rangeList", rangeList);
		
		XzqhInfo  xzqhInfo=new XzqhInfo();
		xzqhInfo.setCc("1");
		List<XzqhInfo>  provinceList=xzqhInfoService.selectByCondition(xzqhInfo);
		model.addAttribute("provinceList", provinceList);
		xzqhInfo.setCc("2");
		List<XzqhInfo>  cityList=xzqhInfoService.selectByCondition(xzqhInfo);
		model.addAttribute("cityList", cityList);
		xzqhInfo.setCc("3");
		List<XzqhInfo>  areaList=xzqhInfoService.selectByCondition(xzqhInfo);
		model.addAttribute("areaList", areaList);
		
		return "kfzgl/kfzxx/first/kfzSupplyBasic";
	}
	
	/**
	 * 查询开发者 基本信息
	 * @param kfzxxInfoExtend
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("queryKfzxxInfo")
	public DataResult<List<KfzxxInfoExtend>> queryKfzxxInfo(KfzxxInfoExtend kfzxxInfoExtend) throws Exception{
		kfzxxInfoExtend.setYhid(this.getYhId());
		return  kfzxxInfoService.selectByCondition(kfzxxInfoExtend);
	}
	
	/**
	 * 添加或修改开发者信息
	 * @param kfzxxInfo
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("saveOrUpdateKfzxxInfo")
	public DataResult<KfzxxInfo> saveOrUpdateKfzxxInfo(KfzxxInfo kfzxxInfo) throws Exception{
		
		kfzxxInfo.setYhid(this.getYhId());
		return  kfzxxInfoService.saveOrUpdateKfzxxInfo(kfzxxInfo, this.createCustomOperateLog());
	}
	
	@ResponseBody
	@RequestMapping("queryXzqhInfoList")
	public DataResult<List<XzqhInfo>> queryXzqhInfoList(XzqhInfo xzqhInfo) throws Exception{
		return  DataResult.success(xzqhInfoService.selectByCondition(xzqhInfo));
	}
	
	
	
}
